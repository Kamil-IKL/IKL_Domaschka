# Напишите программу с использованием механизмов многопоточности, которая создает два потока-рыцаря.
#
# Каждый рыцарь должен иметь имя (name) и умение(skill). Умение рыцаря определяет, сколько времени потребуется рыцарю,
# чтобы выполнить свою защитную миссию для королевства.
# Враги будут нападать в количестве 100 человек. Каждый день рыцарь может ослабить вражеское войско на skill-человек.
# Если у рыцаря skill равен 20, то защищать крепость он будет 5 дней (5 секунд в программе).
# Чем выше умение, тем быстрее рыцарь защитит королевство.

import time
import threading


def counter_day():  # функция счетчика дней, где 1 секунда = 1 день
    a = 0
    while True:
        time.sleep(1)
        a += 1
        print(a)


class Knight:
    def __init__(self):
        self.name = name = input('Рыцаря зовут; ')
        self.skill = skill = int(input(f'Выберите уровень рыцаря ("Птинец" = 1, "Орел" = 2, "Асс" = 3 : '))

    def skill(self):
        if skill == 3 and skill == 'Асс':
            time = 20


enemy = int(input(f'Введите количество нападающих врагов: '))
# skill = int(input(f'Выберите уровень рыцаря ("Птинец" = 1, "Орел" = 2, "Асс" = 3 : '))
Knight_01 = Knight()
print(type(Knight_01))
Knight_02 = Knight()
